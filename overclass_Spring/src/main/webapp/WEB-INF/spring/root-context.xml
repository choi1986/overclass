<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		<bean id="dataSource" 
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
     <property name="driverClassName" 
             value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
     <property name="url">
        <value>jdbc:oracle:thin:@192.168.0.131:1521:XE</value>
     </property>
     <property name="username" value="scott"></property>     
     <property name="password" value="tiger"></property>     
   </bean>
   
   <bean id="sqlSessionFactory" 
         class="org.mybatis.spring.SqlSessionFactoryBean" >
     <property name="dataSource" ref="dataSource"/>
     <property name="configLocation">
        <value>classpath:/mybatis-config.xml</value>
     </property>  
     <property name="mapperLocations" value="classpath:mappers/**/*.xml"></property>    
   </bean>
   
   <!-- XML내의 sql문 호출하는 객체: SqlSession
       class SqlSessionTemplate implements SqlSession
    -->
   <bean id="sqlSession" 
        class="org.mybatis.spring.SqlSessionTemplate"
        destroy-method="clearCache">
       <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg> 
   </bean>
   
   <!-- DAO객체를 스프링에서 관리  -->
   <context:component-scan base-package="kr.co.overclass.persistence"/>
   
   <!-- Service객체를 스프링에서 관리  -->
   <!-- <bean class="com.kosta.service.BoardServiceImpl"></bean> -->
   <context:component-scan base-package="kr.co.overclass.service"/>
   
</beans>
